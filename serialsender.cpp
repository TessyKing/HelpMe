#include "serialsender.h"
#include <QtSerialPort/QSerialPort>
#include <QtSerialPort/QSerialPortInfo>
#include <QDebug>
#include <QDateTime>

SerialSender::SerialSender(QWidget *parent) : QWidget(parent)
{
    if (0 != this->Serial_Init())
    {
        qDebug()<<"Sender: SerialInit error";
        return;
    }

    timer = new QTimer();
    connect(timer, &QTimer::timeout, this, &SerialSender::Send_EcgPkg);
    timer->start(2); // 每秒钟500个数据
}

SerialSender::SerialSender(const QString &comName, QWidget *parent) : QWidget(parent)
{
    serialportName = comName;
    if (0 != this->Serial_Init())
    {
        qDebug()<<"Sender: SerialInit error";
        return;
    }

    timer = new QTimer();
    connect(timer, &QTimer::timeout, this, &SerialSender::Send_EcgPkg);
    timer->start(2); // 每秒钟500个数据
}

int ecgData []= {
    2080, 2080, 2080, 2072, 2064, 2064, 2064, 2048, 2032, 2032,
     2032, 2016, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 1992, 1984, 1976,
     1968, 1960, 1952, 1944, 1936, 1944, 1952, 2016, 2080, 2136,
     2192, 2256, 2320, 2376, 2432, 2488, 2544, 2568, 2592, 2536,
     2480, 2424, 2368, 2304, 2240, 2184, 2128, 2072, 2016, 1968,
     1920, 1928, 1936, 1944, 1952, 1960, 1968, 1984, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2192, 2192, 2192, 2200, 2208, 2208, 2208, 2208, 2208, 2208,
     2208, 2200, 2192, 2192, 2192, 2184, 2176, 2176, 2176, 2168,
     2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2008, 2016, 2024, 2032, 2032,
     2032, 2048, 2064, 2064, 2064, 2072, 2080, 2088, 2096, 2104,
     2112, 2112, 2112, 2120, 2128, 2136, 2144, 2152, 2160, 2160,
     2160, 2160, 2160, 2168, 2176, 2176, 2176, 2184, 2192,
     2192, 2192, 2192, 2200, 2208, 2208, 2208, 2208, 2208, 2208,
     2208, 2200, 2192, 2192, 2192, 2184, 2176, 2176, 2176, 2168,
     2160, 2160, 2160, 2144, 2128, 2128, 2128, 2128, 2128, 2112,
     2096, 2088, 2080, 2072, 2064, 2064, 2064, 2048, 2032, 2024,
     2016, 2016, 2016, 2008, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2008, 2016, 2016, 2016, 2024, 2032, 2048,
     2064, 2064, 2064, 2072, 2080, 2080, 2080, 2088, 2096, 2104,
     2112, 2112, 2112, 2112, 2112, 2112, 2104, 2096, 2088,
     2080, 2080, 2080, 2072, 2064, 2064, 2064, 2048, 2032, 2032,
     2032, 2016, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 1992, 1984, 1976,
     1968, 1960, 1952, 1944, 1936, 1944, 1952, 2016, 2080, 2136,
     2192, 2256, 2320, 2376, 2432, 2488, 2544, 2568, 2592, 2536,
     2480, 2424, 2368, 2304, 2240, 2184, 2128, 2072, 2016, 1968,
     1920, 1928, 1936, 1944, 1952, 1960, 1968, 1984, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2008, 2016, 2024, 2032, 2032,
     2032, 2048, 2064, 2064, 2064, 2072, 2080, 2088, 2096, 2104,
     2112, 2112, 2112, 2120, 2128, 2136, 2144, 2152, 2160, 2160,
     2160, 2160, 2160, 2168, 2176, 2176, 2176, 2184, 2192,
     2192, 2192, 2192, 2200, 2208, 2208, 2208, 2208, 2208, 2208,
     2208, 2200, 2192, 2192, 2192, 2184, 2176, 2176, 2176, 2168,
     2160, 2160, 2160, 2144, 2128, 2128, 2128, 2128, 2128, 2112,
     2096, 2088, 2080, 2072, 2064, 2064, 2064, 2048, 2032, 2024,
     2016, 2016, 2016, 2008, 2000, 2000, 2000, 2000, 2000,
     2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000};

void SerialSender::Send_EcgPkg()
{
    char dataBuf[10];
    unsigned int ecg[3]={2048, 2048, 2048};
    int i;

    int len = (int)sizeof(ecgData)/sizeof(int);
    // 取ECG2数据
    if(ecgDataIndex > len){
        ecgDataIndex = 0;
        }
    ecg[1]=ecgData[ecgDataIndex++];

    // 封包
    dataBuf[0] = 0x08; // 包头
    dataBuf[1] = 0x80;
    for(i=0; i < 3; i++)
    {
        dataBuf[1] = dataBuf[1] | ((ecg[i]&0x80) >> (7-i*2-1));
        dataBuf[1] = dataBuf[1] | ((ecg[i]&0x8000) >> (15-i*2));
        dataBuf[i*2+3] = 0x80 | (ecg[i] & 0x7F);
        dataBuf[i*2+2] = 0x80 | ((ecg[i]>>8) & 0x7F);
    }
    dataBuf[8] = 0x80; // ECG状态位
    dataBuf[9] = 0xFF; // 校验位

    this->com->write(dataBuf, sizeof(dataBuf));
}

int SerialSender::Serial_Init(void)
{
    // 打印串口信息
//    foreach(const QSerialPortInfo &info, QSerialPortInfo::availablePorts())
//    {
//        qDebug() << "Name : " << info.portName();
//        qDebug() << "Description : " << info.description();
//        qDebug() << "Manufacturer: " << info.manufacturer();
//        qDebug() << "Serial Number: " << info.serialNumber();
//    }//执行完应该在应用程序输出位置看到串口数据，需要先启动串口模拟器，并创建串口

    // 创建串口对象, 在头文件中定义了指针
    com = new QSerialPort();
    // 配置串口号
    com->setPortName(this->serialportName);
    // 尝试打开串口
    if(!com->open(QIODevice::ReadWrite))
    {
        qDebug() << "serial open err: " << this->serialportName;
        return -1;
    }
    else
        qDebug()<<"serail open success!"<<com->portName();

    // 配置串口参数
    // 波特率=115200, 每秒钟发送115200个bit，方向=双向均采用这个波特率
    com->setBaudRate(QSerialPort::Baud115200, QSerialPort::AllDirections);
    // 数据位
    com->setDataBits(QSerialPort::Data8);
    // 流控=无
    com->setFlowControl(QSerialPort::NoFlowControl);
    // 校验位=无
    com->setParity(QSerialPort::NoParity);
    // 停止位=1
    com->setStopBits(QSerialPort::OneStop);

    return 0;
}


