#include "serialsender.h"
#include <QtSerialPort/QSerialPort>
#include <QtSerialPort/QSerialPortInfo>
#include <QDebug>
#include <QDateTime>

int ECGData []= {
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2008, 2016, 2016, 2016, 2024, 2032, 2048,
    2064, 2064, 2064, 2072, 2080, 2080, 2080, 2088, 2096, 2104,
    2112, 2112, 2112, 2112, 2112, 2112, 2104, 2096, 2088,
    2080, 2080, 2080, 2072, 2064, 2064, 2064, 2048, 2032, 2032,
    2032, 2016, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 1992, 1984, 1976,
    1968, 1960, 1952, 1944, 1936, 1944, 1952, 2016, 2080, 2136,
    2192, 2256, 2320, 2376, 2432, 2488, 2544, 2568, 2592, 2536,
    2480, 2424, 2368, 2304, 2240, 2184, 2128, 2072, 2016, 1968,
    1920, 1928, 1936, 1944, 1952, 1960, 1968, 1984, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2008, 2016, 2024, 2032, 2032,
    2032, 2048, 2064, 2064, 2064, 2072, 2080, 2088, 2096, 2104,
    2112, 2112, 2112, 2120, 2128, 2136, 2144, 2152, 2160, 2160,
    2160, 2160, 2160, 2168, 2176, 2176, 2176, 2184, 2192,
    2192, 2192, 2192, 2200, 2208, 2208, 2208, 2208, 2208, 2208,
    2208, 2200, 2192, 2192, 2192, 2184, 2176, 2176, 2176, 2168,
    2160, 2160, 2160, 2144, 2128, 2128, 2128, 2128, 2128, 2112,
    2096, 2088, 2080, 2072, 2064, 2064, 2064, 2048, 2032, 2024,
    2016, 2016, 2016, 2008, 2000, 2000, 2000, 2000, 2000,
    2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000};


int SpO2Data[] = {
320,350,380,410,440,470,490,520,540,560,580,600,610,620,630,630,640,650,656,659,663,665,667,668,669,671,670,669,667,665,664,662,660,659,656,653,651,649,647,645,644,642,641,638,635,532,531,630,630,620,610,600,580,560,540,520,510,500,494,490,585,482,479,473,470,466,463,460,458,453,449,445,440,410,380,372,368,362,359,353,350,320,280,250,220,190,160,140,110,90,70,50,30,20,10,0,0,0,0,10,20,30,50,70,90,110,140,10,190,220,250,256,267,274,280, 320,350,380,410,440,470,490,520,540,560,580,600,610,620,630,630,640,650,656,659,663,665,667,668,669,671,670,669,667,665,664,662,660,659,656,653,651,649,647,645,644,642,641,638,635,532,531,630,630,620,610,600,580,560,540,520,510,500,494,490,585,482,479,473,470,466,463,460,458,453,449,445,440,410,380,372,368,362,359,353,350,320,280,250,220,190,160,140,110,90,70,50,30,20,10,0,0,0,0,10,20,30,50,70,90,110,140,10,190,220,250,256,267,274,280, 320,350,380,410,440,470,490,520,540,560,580,600,610,620,630,630,640,650,656,659,663,665,667,668,669,671,670,669,667,665,664,662,660,659,656,653,651,649,647,645,644,642,641,638,635,532,531,630,630,620,610,600,580,560,540,520,510,500,494,490,585,482,479,473,470,466,463,460,458,453,449,445,440,410,380,372,368,362,359,353,350,320,280,250,220,190,160,140,110,90,70,50,30,20,10,0,0,0,0,10,20,30,50,70,90,110,140,10,190,220,250,256,267,274,280320,350,380,410,440,470,490,520,540,560,580,600,610,620,630,630,640,650,656,659,663,665,667,668,669,671,670,669,667,665,664,662,660,659,656,653,651,649,647,645,644,642,641,638,635,532,531,630,630,620,610,600,580,560,540,520,510,500,494,490,585,482,479,473,470,466,463,460,458,453,449,445,440,410,380,372,368,362,359,353,350,320,280,250,220,190,160,140,110,90,70,50,30,20,10,0,0,0,0,10,20,30,50,70,90,110,140,10,190,220,250,256,267,274,280320,350,380,410,440,470,490,520,540,560,580,600,610,620,630,630,640,650,656,659,663,665,667,668,669,671,670,669,667,665,664,662,660,659,656,653,651,649,647,645,644,642,641,638,635,532,531,630,630,620,610,600,580,560,540,520,510,500,494,490, 320   };

int RESPData[] = {
    561,573,575,619,658,624,670,737,686,773,
    806,761,805,804,872,890,869,937,953,997,
    932,1026,1050,1041,1036,1075,1107,1115,1154,1131,
    1172,1190,1210,1221,1224,1286,1270,1267,1371,1307,
    1357,1397,1447,1433,1483,1465,1449,1469,1538,1521,
    1608,1562,1606,1586,1630,1633,1708,1660,1771,1762,
    1775,1750,1819,1804,1837,1868,1923,1955,1921,1902,
    1970,2031,1996,2054,2020,2116,2061,2108,2179,2168,
    2204,2221,2194,2233,2299,2238,2278,2260,2368,2327,
    2387,2368,2453,2428,2483,2427,2461,2470,2497,2513,
    2534,2549,2576,2615,2651,2620,2689,2679,2736,2798,
    2723,2764,2768,2824,2809,2909,2842,2955,2965,2993,
    2963,2963,3047,2994,3003,3068,3040,3118,3098,3180,
    3216,3238,3241,3269,3298,3229,3297,3332,3302,3338,
    3412,3378,3439,3470,3457,3478,3531,3475,3568,3556,
    3478,3436,3435,3440,3390,3330,3315,3298,3289,3245,
    3170,3173,3113,3082,3021,3053,3037,2928,2924,2861,
    2906,2831,2817,2800,2764,2717,2621,2576,2553,2513,
    2546,2505,2499,2379,2434,2367,2302,2248,2298,2262,
    2232,2202,2107,2065,2072,2014,1981,1985,1937,1871,
    1906,1860,1780,1786,1777,1677,1674,1620,1602,1561,
    1499,1499,1481,1406,1408,1361,1312,1335,1319,1277,
    1186,1173,1128,1124,1074,1085,1054,1023,909,946,
    832,882,843,783,729,676,630,612,634,616,
    560,477,486,483,418,344,307,298,278,213,
    257,223,261,250,287,287,251,304,231,239,
    272,247,263,287,281,260,276,310,258,273,
    245,276,233,269,274,312,240,302,251,298,
    249,319,238,292,326,238,262,315,253,254,
    265,276,317,316,304,279,317,335,346,268,
    328,325,323,317,323,348,342,260,339,273,
    288,264,362,291,290,309,291,291,341,331,
    352,275,305,279,368,301,308,370,321,302,
    367,346,283,371,345,299,361,358,359,325,
    324,303,353,390,362,381,347,338,393,395,
    325,321,328,380,399,364,309,379,375,388,
    404,363,397,332,379,335,369,318,406,380,
    347,332,380,394,340,402,354,371,387,394,
    340,414,419,399,422,413,411,363,366,369,
    369,365,363,346,407,369,443,385,410,445,
    376,416,413,356,371,386,383,369,430,371,
    408,415,383,454,389,454,430,408,420,432,
    400,372,386,432,453,441,384,455,379,438,
    420,385,443,441,409,463,395,401,476,391,
    441,452,421,487,479,401,437,409,403,435,
    457,474,453,427,490,462,423,434,466,436,
    468,449,484,483,476,512,439,435,431,437,
    517,507,464,447,454,455,492,487,461,526,
    486,485,495,518,469,490,509,495,508,472,
    504,449,526,455,480,513,495,523,487,473
};
SerialSender::SerialSender(QWidget *parent) : QWidget(parent)
{
    if (0 != this->Serial_Init())
    {
        qDebug()<<"Sender: SerialInit error";
        return;
    }

    timer = new QTimer();
    connect(timer, &QTimer::timeout, this, &SerialSender::Send_EcgPkg);
    timer->start(2); // 每秒钟500个数据
}

SerialSender::SerialSender( int dataType, const QString &comName, QWidget *parent) : QWidget(parent)
{
    this->dataType = dataType;
    serialportName = comName;
    if (0 != this->Serial_Init())
    {
        qDebug()<<"Sender: SerialInit error";
        return;
    }

    timer = new QTimer();
    connect(timer, &QTimer::timeout, this, &SerialSender::Send_EcgPkg);
    timer->start(2); // 每秒钟500个数据
}


void SerialSender::Send_EcgPkg()
{
    char dataBuf[10];
    unsigned int ecg[3]={2048, 2048, 2048};
    int i;

    switch ( dataType )
    {
        case 1 :
        {
            int len = (int)sizeof(ECGData)/sizeof(int);
                // 取ECG2数据
                if(dataIndex > len){
                    dataIndex = 0;
                    }
                ecg[1]=ECGData[dataIndex++];
                break;
        }
        case 2 :
        {
            int len = (int)sizeof(SpO2Data)/sizeof(int);
                // 取ECG2数据
                if(dataIndex > len){
                    dataIndex = 0;
                    }
                ecg[1]=SpO2Data[dataIndex++];
                break;
        }
        case 3 :
        {
            int len = (int)sizeof(RESPData)/sizeof(int);
                // 取ECG2数据
                if(dataIndex > len){
                    dataIndex = 0;
                    }
                ecg[1]=RESPData[dataIndex++];
                break;
        }
    }

    // 封包
    dataBuf[0] = 0x08; // 包头
    dataBuf[1] = 0x80;
    for(i=0; i < 3; i++)
    {
        dataBuf[1] = dataBuf[1] | ((ecg[i]&0x80) >> (7-i*2-1));
        dataBuf[1] = dataBuf[1] | ((ecg[i]&0x8000) >> (15-i*2));
        dataBuf[i*2+3] = 0x80 | (ecg[i] & 0x7F);
        dataBuf[i*2+2] = 0x80 | ((ecg[i]>>8) & 0x7F);
    }
    dataBuf[8] = 0x80; // ECG状态位
    dataBuf[9] = 0xFF; // 校验位

    this->com->write(dataBuf, sizeof(dataBuf));
}

int SerialSender::Serial_Init(void)
{
    // 打印串口信息
//    foreach(const QSerialPortInfo &info, QSerialPortInfo::availablePorts())
//    {
//        qDebug() << "Name : " << info.portName();
//        qDebug() << "Description : " << info.description();
//        qDebug() << "Manufacturer: " << info.manufacturer();
//        qDebug() << "Serial Number: " << info.serialNumber();
//    }//执行完应该在应用程序输出位置看到串口数据，需要先启动串口模拟器，并创建串口

    // 创建串口对象, 在头文件中定义了指针
    com = new QSerialPort();
    // 配置串口号
    com->setPortName(this->serialportName);
    // 尝试打开串口
    if(!com->open(QIODevice::ReadWrite))
    {
        qDebug() << "serial open err: " << this->serialportName;
        return -1;
    }
    else
        qDebug()<<"serail open success!"<<com->portName();

    // 配置串口参数
    // 波特率=115200, 每秒钟发送115200个bit，方向=双向均采用这个波特率
    com->setBaudRate(QSerialPort::Baud115200, QSerialPort::AllDirections);
    // 数据位
    com->setDataBits(QSerialPort::Data8);
    // 流控=无
    com->setFlowControl(QSerialPort::NoFlowControl);
    // 校验位=无
    com->setParity(QSerialPort::NoParity);
    // 停止位=1
    com->setStopBits(QSerialPort::OneStop);

    return 0;
}


